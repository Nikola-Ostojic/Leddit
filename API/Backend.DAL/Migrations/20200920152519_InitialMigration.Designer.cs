// <auto-generated />
using System;
using Backend.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Backend.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200920152519_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Backend.DAL.Entities.MovieEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2020, 9, 20, 17, 25, 18, 942, DateTimeKind.Local).AddTicks(2408),
                            ImageUrl = "https://gortoncenter.org/wp-content/uploads/2018/05/The-Martian.jpg",
                            Modified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "The Martian"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2020, 9, 20, 17, 25, 18, 942, DateTimeKind.Local).AddTicks(2461),
                            ImageUrl = "https://m.media-amazon.com/images/M/MV5BMjQ3OTgzMzY4NF5BMl5BanBnXkFtZTgwOTc4OTQyMzI@._V1_.jpg",
                            Modified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kingsman: The Golden Circle"
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2020, 9, 20, 17, 25, 18, 942, DateTimeKind.Local).AddTicks(2465),
                            ImageUrl = "https://www.denofgeek.com/wp-content/uploads/2019/09/battlestar-galactica-reboot-1.jpeg",
                            Modified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Battlestar Galactica Razor"
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2020, 9, 20, 17, 25, 18, 942, DateTimeKind.Local).AddTicks(2469),
                            ImageUrl = "https://www.un.org/sites/un2.un.org/files/styles/large-article-image-style-16-9/public/field/image/dictator_quad-1024x768.jpg",
                            Modified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "The Dictator"
                        },
                        new
                        {
                            Id = 5,
                            Created = new DateTime(2020, 9, 20, 17, 25, 18, 942, DateTimeKind.Local).AddTicks(2472),
                            ImageUrl = "https://i.pinimg.com/originals/a8/63/be/a863beaf54137860699352f35e6c5052.jpg",
                            Modified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Iron Man"
                        },
                        new
                        {
                            Id = 6,
                            Created = new DateTime(2020, 9, 20, 17, 25, 18, 942, DateTimeKind.Local).AddTicks(2475),
                            ImageUrl = "https://icdn2.digitaltrends.com/image/digitaltrends/guardians-of-the-galaxy-vol-2-2.jpg",
                            Modified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Guardians of the Galaxy"
                        },
                        new
                        {
                            Id = 7,
                            Created = new DateTime(2020, 9, 20, 17, 25, 18, 942, DateTimeKind.Local).AddTicks(2478),
                            ImageUrl = "https://m.media-amazon.com/images/M/MV5BMjA5NDQyMjc2NF5BMl5BanBnXkFtZTcwMjg5ODcyMw@@._V1_.jpg",
                            Modified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "How to train your dragon"
                        });
                });

            modelBuilder.Entity("Backend.DAL.Entities.RefreshTokenEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ValidFor")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("Backend.DAL.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2020, 9, 20, 17, 25, 18, 937, DateTimeKind.Local).AddTicks(6929),
                            Email = "user@levi9.com",
                            Modified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "b512d97e7cbf97c273e4db073bbb547aa65a84589227f8f3d9e4a72b9372a24d",
                            Role = 0,
                            UserName = "User"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2020, 9, 20, 17, 25, 18, 940, DateTimeKind.Local).AddTicks(7195),
                            Email = "admin@levi9.com",
                            Modified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "c1c224b03cd9bc7b6a86d77f5dace40191766c485cd55dc48caf9ac873335d6f",
                            Role = 1,
                            UserName = "Admin"
                        });
                });

            modelBuilder.Entity("Backend.DAL.Entities.RefreshTokenEntity", b =>
                {
                    b.HasOne("Backend.DAL.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
